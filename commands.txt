Connect to Switch VM via SSH and specify portforwarding for local host access to jupyter lab 
(old VM has IP = 86.119.39.72!)
--------------------------------------------------------------------------------------------
sudo ssh -L 8888:localhost:8888 -L 8061:localhost:8061 ubuntu@86.119.39.18 -i /home/getecer/.ssh/switchsshpascal


--------------------------------------------------------------------------------------------
!!!!!!!!!--------------------------------[CPU]---------------------------------------!!!!!!!
--------------------------------------------------------------------------------------------


Build Docker container (on Switch VM) - [CPU]
--------------------------------------------------------------------------------------------
cd ~/mydocker
sudo nano Dockerfile
sudo docker build . --no-cache -t 'tf-gpu'


Run Docker container on  Switch VM with portforwarding and mapping of local /data drive to /data drive in container
--------------------------------------------------------------------------------------------
sudo docker run --rm --gpus "all,capabilities=utility" -v /data:/data -it -p 8888:8888 -p 6006:6006 -p 8061:8061 --name dwarfgan tf-gpu



--------------------------------------------------------------------------------------------
!!!!!!!!!--------------------------------[GPU]---------------------------------------!!!!!!!
--------------------------------------------------------------------------------------------

Build Docker container (on Switch VM) - [GPU]
--------------------------------------------------------------------------------------------
cd ~/mydocker
sudo nano Dockerfile
sudo nvidia-docker build . --no-cache -t 'tf-gpu'


Run Docker container on  Switch VM with portforwarding and mapping of local /data drive to /data drive in container
--------------------------------------------------------------------------------------------
sudo docker run --rm --gpus all -v /data:/data /data2:/data2 -it -p 8888:8888 -p 6006:6006 -p 8061:8061 --name dwarfgan tf-gpu bash


Run Jupyter Lab inside docker container on 0.0.0.0
--------------------------------------------------------------------------------------------
jupyter lab --ip 0.0.0.0 --allow-root

OPTIONAL: specify workdir with: --notebook-dir=/

Run Tensorboard on docker container
--------------------------------------------------------------------------------------------
tensorboard --port=8061 --logdir=/data/output/tensorboard --bind_all


Further Docker Commands
--------------------------------------------------------------------------------------------

-- Delete dangling / untagged images
sudo docker image prune -a


Command to connect to S3 bucket with images and download to VM /data mapped drive
--------------------------------------------------------------------------------------------
sudo s3cmd ls s3://storage_hil --host=https://os.zhdk.cloud.switch.ch --region='ZH' --access_key='' --secret_key='' --host-bucket=storage_hil

# download files to /data on VM
sudo s3cmd get --recursive s3://storage_hil/maps/ /data/maps/ --host=https://os.zhdk.cloud.switch.ch --region='ZH' --access_key='' --secret_key='' --host-bucket=storage_hil



SCP to copy images from remote machine (VM) to local machine
--------------------------------------------------------------------------------------------
[ON LOCAL WSL2 INSTANCE]

sudo scp -i /home/getecer/.ssh/switchsshpascal ubuntu@86.119.39.18:/data/input/crops/IMAGE_NAME.png ./

RECURSIVE (entire directory) - INTO: /mnt/g/Dev/DataScience/masterthesis_gan_mapdesign/data/crops/
sudo scp -i /home/getecer/.ssh/switchsshpascal -r ubuntu@86.119.39.18:/data/input/crops /mnt/g/Dev/DataScience/masterthesis_gan_mapdesign/data/crops/

# due to "too many arguments error" we have to copy images batch-wise
sudo mv $(ls -d $(ls | head -1000)) maps
# ..with a loop:
for i in `seq 1 1000`; do sudo mv $(ls -d $(ls | head -1000)) maps; done